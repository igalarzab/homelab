---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/values.schema.json

defaultPodOptions:
  terminationGracePeriodSeconds: 30

controllers:
  n8n:
    type: deployment
    strategy: RollingUpdate
    annotations:
      keel.sh/policy: major
      keel.sh/trigger: poll
      keel.sh/pollSchedule: "@midnight"
    containers:
      n8n:
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 100
          fsGroup: 100
        image:
          repository: docker.n8n.io/n8nio/n8n
          tag: "${DOCKER_TAG__N8N__DEPLOYMENT__N8N__0}"
        env:
          DB_SQLITE_POOL_SIZE: 1
          DB_SQLITE_VACUUM_ON_STARTUP: true
          DOMAIN_NAME: n8n.${COMMON_DOMAIN_ROOT}
          GENERIC_TIMEZONE: ${COMMON_TZ}
          TZ: ${COMMON_TZ}
          N8N_BLOCK_ENV_ACCESS_IN_NODE: true
          N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
          N8N_HIDE_USAGE_PAGE: true
          N8N_HIRING_BANNER_ENABLED: false
          N8N_LICENSE_ACTIVATION_KEY: ${N8N_LICENSE_KEY}
          N8N_HOST: n8n.${COMMON_DOMAIN_ROOT}
          N8N_RUNNERS_ENABLED: true
          NODE_ENV: production
          WEBHOOK_URL: https://n8n.${COMMON_DOMAIN_ROOT}/
        ports:
          - name: http
            protocol: TCP
            containerPort: 5678
        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              initialDelaySeconds: 10
              periodSeconds: 10
              timeoutSeconds: 2
              successThreshold: 1
              failureThreshold: 5
              httpGet:
                path: /healthz
                port: http
          readiness:
            enabled: true
            custom: true
            spec:
              initialDelaySeconds: 10
              periodSeconds: 10
              timeoutSeconds: 2
              successThreshold: 1
              failureThreshold: 5
              httpGet:
                path: /healthz
                port: http

service:
  n8n:
    controller: n8n
    ports:
      http:
        port: 80
        targetPort: http

ingress:
  main:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: n8n.${COMMON_DOMAIN_ROOT}
      external-dns.alpha.kubernetes.io/target: ${COMMON_DNS_IP}
      external-dns.alpha.kubernetes.io/ttl: 1m
    hosts:
      - host: "n8n.${COMMON_DOMAIN_ROOT}"
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: n8n
              port: http

persistence:
  config:
    type: hostPath
    hostPath: ${COMMON_VOLUMES_PATH}/n8n/
    hostPathType: DirectoryOrCreate
    advancedMounts:
      n8n:
        n8n:
          - path: /home/node/.n8n
