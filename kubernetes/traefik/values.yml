ingressClass:
  enabled: true
  isDefaultClass: true

ingressRoute:
  dashboard:
    enabled: true

globalArguments:
  - "--global.checknewversion"

experimental:
  plugins:
    traefik-oidc-auth:
      moduleName: github.com/sevensolutions/traefik-oidc-auth
      version: v0.15.0

metrics:
  prometheus: null

ports:
  web:
    nodePort: 80
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
  websecure:
    nodePort: 443

service:
  type: NodePort
  annotations:
    external-dns.alpha.kubernetes.io/hostname: k8s.${COMMON_DOMAIN_ROOT}
    external-dns.alpha.kubernetes.io/target: ${COMMON_DNS_IP}
    external-dns.alpha.kubernetes.io/ttl: 1m

providers:
  kubernetesCRD:
    allowCrossNamespace: true # Access Middlewares in other namespaces

extraObjects:
  - |
    apiVersion: traefik.io/v1alpha1
    kind: TLSStore
    metadata:
      name: default
    spec:
      defaultCertificate:
        secretName: ${CERTMANAGER_CERT_SECRET_NAME}
  - |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: ${CERTMANAGER_CERT_NAME}
    spec:
      secretName: ${CERTMANAGER_CERT_SECRET_NAME}
      issuerRef:
        name: letsencrypt-prod
        kind: ClusterIssuer
      dnsNames:
        - "*.${COMMON_DOMAIN_ROOT}"
  - |
    apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: oidc-smarthome
      namespace: traefik
    spec:
        plugin:
          traefik-oidc-auth:
            Secret: ${POCKETID_SECRET}
            Scopes: ["openid", "profile", "email"]
            Provider:
              Url: https://auth.${COMMON_DOMAIN_ROOT}
              ClientId: ${POCKETID_SMARTHOME_CLIENT_ID}
              ClientSecret: ${POCKETID_SMARTHOME_CLIENT_SECRET}
