ingressClass:
  enabled: true
  isDefaultClass: true

ingressRoute:
  dashboard:
    enabled: true

globalArguments:
  - "--global.checknewversion"

metrics:
  prometheus: null

ports:
  web:
    nodePort: 80
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
  websecure:
    nodePort: 443

service:
  type: NodePort

providers:
  kubernetesCRD:
    allowCrossNamespace: true # Access Middlewares in other namespaces

extraObjects:
  - |
    apiVersion: traefik.io/v1alpha1
    kind: TLSStore
    metadata:
      name: default
    spec:
      defaultCertificate:
        secretName: ${CERTMANAGER_CERT_SECRET_NAME}
  - |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: ${CERTMANAGER_CERT_NAME}
    spec:
      secretName: ${CERTMANAGER_CERT_SECRET_NAME}
      issuerRef:
        name: letsencrypt-prod
        kind: ClusterIssuer
      dnsNames:
        - "*.${COMMON_DOMAIN_ROOT}"
  - |
      apiVersion: traefik.io/v1alpha1
      kind: Middleware
      metadata:
        name: middlewares-authentik
      spec:
        forwardAuth:
          address: http://authentik-server.authentik/outpost.goauthentik.io/auth/traefik
          trustForwardHeader: true
          authResponseHeaders:
            - X-authentik-username
            - X-authentik-groups
            - X-authentik-email
            - X-authentik-name
            - X-authentik-uid
            - X-authentik-jwt
            - X-authentik-meta-jwks
            - X-authentik-meta-outpost
            - X-authentik-meta-provider
            - X-authentik-meta-app
            - X-authentik-meta-version
